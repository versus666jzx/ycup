# Всем хотя бы раз в жизни приходилось перекладывать JSON. Вот и для нового проекта под названием «Единое хранилище»
# необходимо переложить магазинные фиды. Для размещения на Яндекс.Маркете магазины передают товары из своего
# ассортимент в JSON-файлах. Одно товарное предложение описывается так:
# { "offer_id": <string>,
#   "market_sku": <int>,
#   "price": <int>
#  }
#
# где offer_id — уникальный среди всех фидов магазина идентификатор предложения, market_sku — идентификатор товара на
# Яндекс.Маркете, price — стоимость товара.
#
# Весь фид магазина представляет собой JSON и выглядит так:
# {
#     "offers": [<offer>, <offer>, ...]
# }
#
# Вас попросили написать программу, которая объединит все фиды одного магазина в единый фид. Так как фид может
# получиться достаточно большим, требуется оставить только m первых в порядке следования во входных данных товарных
# предложений.
#
# Формат ввода
# На первой строке входных данных содержатся целые числа n и m — количество фидов магазина
# и максимальное количество товарных предложений в итоговом фиде (1≤n≤200,1≤m≤4⋅104). Следующие n строк содержат по
# одному магазинному фиду на строку. Гарантируется, что строка — валидный JSON и удовлетворяет формату фида. В одном
# фиде не больше 200 товарных предложений. offer_id состоит из строчных и заглавных букв латинского алфавита и цифр,
# 1≤|offer_id|≤10, 1≤market_sku≤231−1, 1≤price≤106.
#
# Формат вывода
# Выходной поток должен содержать один JSON-документ,
# удовлетворяющий формату товарного фида. Порядок товарных предложений, количество строк в документе и табуляция не
# имеют значения.

# {"offers": [{"offer_id": "offer1", "market_sku": 10846332, "price": 1490}, {"offer_id": "offer2", "market_sku": 682644, "price": 499}]}

import json

feed_count, feed_max = map(int, input().split()) # 1 ≤ feed_count ≤ 200 & 1 ≤ feed_max ≤ 4⋅10^4
offers = dict(offers=[])


for _ in range(feed_count):
    feed = json.loads(input())
    offers["offers"] += feed["offers"]

offers["offers"] = offers["offers"][:feed_max]
print(json.dumps(offers))


